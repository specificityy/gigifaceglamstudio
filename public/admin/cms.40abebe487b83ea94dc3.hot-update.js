webpackHotUpdate("cms",{

/***/ "./node_modules/uuid/dist/esm-browser/bytesToUuid.js":
false,

/***/ "./node_modules/uuid/dist/esm-browser/index.js":
false,

/***/ "./node_modules/uuid/dist/esm-browser/md5.js":
false,

/***/ "./node_modules/uuid/dist/esm-browser/rng.js":
false,

/***/ "./node_modules/uuid/dist/esm-browser/sha1.js":
false,

/***/ "./node_modules/uuid/dist/esm-browser/v1.js":
false,

/***/ "./node_modules/uuid/dist/esm-browser/v3.js":
false,

/***/ "./node_modules/uuid/dist/esm-browser/v35.js":
false,

/***/ "./node_modules/uuid/dist/esm-browser/v4.js":
false,

/***/ "./node_modules/uuid/dist/esm-browser/v5.js":
false,

/***/ "./src/templates/products-page.js":
/*!****************************************!*\
  !*** ./src/templates/products-page.js ***!
  \****************************************/
/*! exports provided: ProductsPageTemplate, productsPageQuery, default */
/***/ (function(module, __webpack_exports__, __webpack_require__) {

"use strict";
__webpack_require__.r(__webpack_exports__);
/* WEBPACK VAR INJECTION */(function(module) {/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "ProductsPageTemplate", function() { return ProductsPageTemplate; });
/* harmony export (binding) */ __webpack_require__.d(__webpack_exports__, "productsPageQuery", function() { return productsPageQuery; });
/* harmony import */ var _babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! @babel/runtime/helpers/esm/extends */ "./node_modules/@babel/runtime/helpers/esm/extends.js");
/* harmony import */ var _emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__ = __webpack_require__(/*! @emotion/styled-base */ "./node_modules/@emotion/styled-base/dist/styled-base.browser.esm.js");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2__ = __webpack_require__(/*! react */ "react");
/* harmony import */ var react__WEBPACK_IMPORTED_MODULE_2___default = /*#__PURE__*/__webpack_require__.n(react__WEBPACK_IMPORTED_MODULE_2__);
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3__ = __webpack_require__(/*! prop-types */ "./node_modules/prop-types/index.js");
/* harmony import */ var prop_types__WEBPACK_IMPORTED_MODULE_3___default = /*#__PURE__*/__webpack_require__.n(prop_types__WEBPACK_IMPORTED_MODULE_3__);
/* harmony import */ var emotion_theming__WEBPACK_IMPORTED_MODULE_4__ = __webpack_require__(/*! emotion-theming */ "./node_modules/emotion-theming/dist/emotion-theming.browser.esm.js");
/* harmony import */ var lodash_kebabCase__WEBPACK_IMPORTED_MODULE_5__ = __webpack_require__(/*! lodash/kebabCase */ "./node_modules/lodash/kebabCase.js");
/* harmony import */ var lodash_kebabCase__WEBPACK_IMPORTED_MODULE_5___default = /*#__PURE__*/__webpack_require__.n(lodash_kebabCase__WEBPACK_IMPORTED_MODULE_5__);
/* harmony import */ var _components_PreviewCompatibleBackgroundImage__WEBPACK_IMPORTED_MODULE_6__ = __webpack_require__(/*! ../components/PreviewCompatibleBackgroundImage */ "./src/components/PreviewCompatibleBackgroundImage.js");
/* harmony import */ var _components_Parallax__WEBPACK_IMPORTED_MODULE_7__ = __webpack_require__(/*! ../components/Parallax */ "./src/components/Parallax.js");
/* harmony import */ var _components_TextBlock__WEBPACK_IMPORTED_MODULE_8__ = __webpack_require__(/*! ../components/TextBlock */ "./src/components/TextBlock.js");
/* harmony import */ var _components_Hexagon__WEBPACK_IMPORTED_MODULE_9__ = __webpack_require__(/*! ../components/Hexagon */ "./src/components/Hexagon.js");
/* harmony import */ var _components_theme__WEBPACK_IMPORTED_MODULE_10__ = __webpack_require__(/*! ../components/theme */ "./src/components/theme.js");
/* harmony import */ var _emotion_core__WEBPACK_IMPORTED_MODULE_11__ = __webpack_require__(/*! @emotion/core */ "./node_modules/@emotion/core/dist/core.browser.esm.js");



var _this = undefined,
    _jsxFileName = "/Users/specificityy/Projects/kaizen-farms/src/templates/products-page.js";

(function () {
  var enterModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.enterModule : undefined;
  enterModule && enterModule(module);
})();

function _EMOTION_STRINGIFIED_CSS_ERROR__() { return "You have tried to stringify object returned from `css` function. It isn't supposed to be used directly (e.g. as value of the `className` prop), but rather handed to emotion so it can handle it (e.g. as value of `css` prop)."; }

var __signature__ = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default.signature : function (a) {
  return a;
};











var ProductsPageTemplate = function ProductsPageTemplate(_ref) {
  var pageName = _ref.pageName,
      heading = _ref.heading,
      subheading = _ref.subheading,
      description = _ref.description,
      products = _ref.products,
      backgroundProducts = _ref.backgroundProducts;
  var page = Object(react__WEBPACK_IMPORTED_MODULE_2__["useRef"])(null);

  var _useState = Object(react__WEBPACK_IMPORTED_MODULE_2__["useState"])(false),
      reveal = _useState[0],
      setReveal = _useState[1];

  Object(react__WEBPACK_IMPORTED_MODULE_2__["useEffect"])(function () {
    if (!page.current) return;
    var options = {
      rootMargin: '0px',
      threshold: 0.2
    };

    var callback = function callback(entries, observer) {
      entries.forEach(function (entry) {
        if (entry.isIntersecting) {
          setReveal(true);
          observer.disconnect();
        }
      });
    };

    var observer = new IntersectionObserver(callback, options);
    observer.observe(page.current);
  }, [page]);
  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_11__["jsx"])(emotion_theming__WEBPACK_IMPORTED_MODULE_4__["ThemeProvider"], {
    theme: _components_theme__WEBPACK_IMPORTED_MODULE_10__["default"],
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 41,
      columnNumber: 9
    }
  }, Object(_emotion_core__WEBPACK_IMPORTED_MODULE_11__["jsx"])(MainParallaxGroup, {
    name: "prod-main-parallax-group",
    id: lodash_kebabCase__WEBPACK_IMPORTED_MODULE_5___default()(pageName),
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 42,
      columnNumber: 13
    }
  }, Object(_emotion_core__WEBPACK_IMPORTED_MODULE_11__["jsx"])(ProductsLayer, {
    variant: "base",
    name: "text-and-products-parallax-layer",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 43,
      columnNumber: 17
    }
  }, Object(_emotion_core__WEBPACK_IMPORTED_MODULE_11__["jsx"])(_components_TextBlock__WEBPACK_IMPORTED_MODULE_8__["TextBlock"], {
    name: "text-wrapper",
    heading: heading,
    subheading: subheading,
    description: description,
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 44,
      columnNumber: 21
    }
  }), Object(_emotion_core__WEBPACK_IMPORTED_MODULE_11__["jsx"])(ProdList, {
    ref: page,
    name: "products-grid",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 50,
      columnNumber: 21
    }
  }, products.map(function (_ref2) {
    var title = _ref2.title,
        image = _ref2.image;
    return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_11__["jsx"])(Product, {
      ke: title,
      reveal: reveal,
      name: title,
      __self: _this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 52,
        columnNumber: 29
      }
    }, Object(_emotion_core__WEBPACK_IMPORTED_MODULE_11__["jsx"])(ProdImage, {
      imageInfo: image,
      __self: _this,
      __source: {
        fileName: _jsxFileName,
        lineNumber: 53,
        columnNumber: 33
      }
    }));
  }))), Object(_emotion_core__WEBPACK_IMPORTED_MODULE_11__["jsx"])(HeroBackgroundLayer, {
    name: "products-hero-background",
    variant: "back",
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 58,
      columnNumber: 17
    }
  }, Object(_emotion_core__WEBPACK_IMPORTED_MODULE_11__["jsx"])(OverlayShade, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 59,
      columnNumber: 21
    }
  }), Object(_emotion_core__WEBPACK_IMPORTED_MODULE_11__["jsx"])(BackgroundImage, {
    imageInfo: backgroundProducts,
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 60,
      columnNumber: 21
    }
  }))));
};

__signature__(ProductsPageTemplate, "useRef{page}\nuseState{[reveal, setReveal](false)}\nuseEffect{}");

var MainParallaxGroup = /*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__["default"])(_components_Parallax__WEBPACK_IMPORTED_MODULE_7__["ParallaxGroup"], {
  target: "e1wmd7cb0",
  label: "MainParallaxGroup"
})("height:200vh;min-height:2000px;@media (", function (_ref3) {
  var theme = _ref3.theme;
  return theme.mediaQueries.s;
}, "){min-height:1700px;}" + ( false ? undefined : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));

var ProductsLayer = /*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__["default"])(_components_Parallax__WEBPACK_IMPORTED_MODULE_7__["ParallaxLayer"], {
  target: "e1wmd7cb1",
  label: "ProductsLayer"
})("height:max-content;min-height:1600px;color:black;padding-bottom:10rem;background:white;display:flex;align-items:center;@media (", function (_ref4) {
  var theme = _ref4.theme;
  return theme.mediaQueries.l;
}, "){display:block;padding-bottom:3rem;min-height:440px;}" + ( false ? undefined : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));

var HeroBackgroundLayer = /*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__["default"])(_components_Parallax__WEBPACK_IMPORTED_MODULE_7__["ParallaxLayer"], {
  target: "e1wmd7cb2",
  label: "HeroBackgroundLayer"
})( false ? undefined : {
  name: "yvjke4",
  styles: "top:50%;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});

var BackgroundImage = /*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__["default"])(_components_PreviewCompatibleBackgroundImage__WEBPACK_IMPORTED_MODULE_6__["PreviewCompatibleBackgroundImage"], {
  target: "e1wmd7cb3",
  label: "BackgroundImage"
})( false ? undefined : {
  name: "1p6f1v0",
  styles: "width:100%;height:100%;background-position:center;background-repeat:no-repeat;background-size:cover;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});

var OverlayShade = Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__["default"])("div", {
  target: "e1wmd7cb4",
  label: "OverlayShade"
})( false ? undefined : {
  name: "12l8yk5",
  styles: "position:absolute;top:0;left:0;display:block;width:100%;height:100%;z-index:10;background:rgba(20,25,30,0.3);",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});

var ProdList = Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__["default"])("ul", {
  target: "e1wmd7cb5",
  label: "ProdList"
})("width:100%;height:fit-content;max-width:1450px;margin:100px 50px 100px 0;padding:20px 2% 55px 2%;overflow:hidden;background:white;flex:1 0 60%;@media (", function (_ref5) {
  var theme = _ref5.theme;
  return theme.mediaQueries.l;
}, "){width:90%;margin:0 auto;}" + ( false ? undefined : "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */"));

var Product = /*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__["default"])(_components_Hexagon__WEBPACK_IMPORTED_MODULE_9__["Hexagon"], {
  target: "e1wmd7cb6",
  label: "Product"
})( false ? undefined : {
  name: "1xzsvtk",
  styles: "box-shadow:0px 9px 11px -5px rgba(0,0,0,0.2),0px 18px 28px 2px rgba(0,0,0,0.14),0px 7px 34px 6px rgba(0,0,0,0.12);",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64, */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});

var ProdImage = /*#__PURE__*/Object(_emotion_styled_base__WEBPACK_IMPORTED_MODULE_1__["default"])(_components_PreviewCompatibleBackgroundImage__WEBPACK_IMPORTED_MODULE_6__["PreviewCompatibleBackgroundImage"], {
  target: "e1wmd7cb7",
  label: "ProdImage"
})( false ? undefined : {
  name: "1mvpys2",
  styles: "width:100%;height:100%;background-position:50% 60%;background-repeat:no-repeat;background-size:cover;padding:5px;",
  map: "/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbIi9Vc2Vycy9zcGVjaWZpY2l0eXkvUHJvamVjdHMva2FpemVuLWZhcm1zL3NyYy90ZW1wbGF0ZXMvcHJvZHVjdHMtcGFnZS5qcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFvSTBEIiwiZmlsZSI6Ii9Vc2Vycy9zcGVjaWZpY2l0eXkvUHJvamVjdHMva2FpemVuLWZhcm1zL3NyYy90ZW1wbGF0ZXMvcHJvZHVjdHMtcGFnZS5qcyIsInNvdXJjZXNDb250ZW50IjpbImltcG9ydCBSZWFjdCwgeyB1c2VTdGF0ZSwgdXNlUmVmLCB1c2VFZmZlY3QgfSBmcm9tICdyZWFjdCc7XG5pbXBvcnQgUHJvcFR5cGVzIGZyb20gJ3Byb3AtdHlwZXMnO1xuaW1wb3J0IHsgZ3JhcGhxbCB9IGZyb20gJ2dhdHNieSc7XG5pbXBvcnQgc3R5bGVkIGZyb20gJ0BlbW90aW9uL3N0eWxlZCc7XG5pbXBvcnQgeyBUaGVtZVByb3ZpZGVyIH0gZnJvbSAnZW1vdGlvbi10aGVtaW5nJztcbmltcG9ydCBrZWJhYkNhc2UgZnJvbSAnbG9kYXNoL2tlYmFiQ2FzZSc7XG5cbmltcG9ydCB7IFByZXZpZXdDb21wYXRpYmxlQmFja2dyb3VuZEltYWdlIH0gZnJvbSAnLi4vY29tcG9uZW50cy9QcmV2aWV3Q29tcGF0aWJsZUJhY2tncm91bmRJbWFnZSc7XG5pbXBvcnQgeyBQYXJhbGxheEdyb3VwLCBQYXJhbGxheExheWVyIH0gZnJvbSAnLi4vY29tcG9uZW50cy9QYXJhbGxheCc7XG5pbXBvcnQgeyBUZXh0QmxvY2sgfSBmcm9tICcuLi9jb21wb25lbnRzL1RleHRCbG9jayc7XG5pbXBvcnQgeyBIZXhhZ29uIH0gZnJvbSAnLi4vY29tcG9uZW50cy9IZXhhZ29uJztcbmltcG9ydCB0aGVtZSBmcm9tICcuLi9jb21wb25lbnRzL3RoZW1lJztcblxuZXhwb3J0IGNvbnN0IFByb2R1Y3RzUGFnZVRlbXBsYXRlID0gKHsgcGFnZU5hbWUsIGhlYWRpbmcsIHN1YmhlYWRpbmcsIGRlc2NyaXB0aW9uLCBwcm9kdWN0cywgYmFja2dyb3VuZFByb2R1Y3RzIH0pID0+IHtcbiAgICBjb25zdCBwYWdlID0gdXNlUmVmKG51bGwpO1xuICAgIGNvbnN0IFtyZXZlYWwsIHNldFJldmVhbF0gPSB1c2VTdGF0ZShmYWxzZSk7XG5cbiAgICB1c2VFZmZlY3QoKCkgPT4ge1xuICAgICAgICBpZiAoIXBhZ2UuY3VycmVudCkgcmV0dXJuO1xuXG4gICAgICAgIGNvbnN0IG9wdGlvbnMgPSB7XG4gICAgICAgICAgICByb290TWFyZ2luOiAnMHB4JyxcbiAgICAgICAgICAgIHRocmVzaG9sZDogMC4yLFxuICAgICAgICB9O1xuXG4gICAgICAgIGNvbnN0IGNhbGxiYWNrID0gKGVudHJpZXMsIG9ic2VydmVyKSA9PiB7XG4gICAgICAgICAgICBlbnRyaWVzLmZvckVhY2goZW50cnkgPT4ge1xuICAgICAgICAgICAgICAgIGlmIChlbnRyeS5pc0ludGVyc2VjdGluZykge1xuICAgICAgICAgICAgICAgICAgICBzZXRSZXZlYWwodHJ1ZSk7XG4gICAgICAgICAgICAgICAgICAgIG9ic2VydmVyLmRpc2Nvbm5lY3QoKTtcbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICB9KTtcbiAgICAgICAgfTtcblxuICAgICAgICBjb25zdCBvYnNlcnZlciA9IG5ldyBJbnRlcnNlY3Rpb25PYnNlcnZlcihjYWxsYmFjaywgb3B0aW9ucyk7XG5cbiAgICAgICAgb2JzZXJ2ZXIub2JzZXJ2ZShwYWdlLmN1cnJlbnQpO1xuICAgIH0sIFtwYWdlXSk7XG5cbiAgICByZXR1cm4gKFxuICAgICAgICA8VGhlbWVQcm92aWRlciB0aGVtZT17dGhlbWV9PlxuICAgICAgICAgICAgPE1haW5QYXJhbGxheEdyb3VwIG5hbWU9XCJwcm9kLW1haW4tcGFyYWxsYXgtZ3JvdXBcIiBpZD17a2ViYWJDYXNlKHBhZ2VOYW1lKX0+XG4gICAgICAgICAgICAgICAgPFByb2R1Y3RzTGF5ZXIgdmFyaWFudD1cImJhc2VcIiBuYW1lPVwidGV4dC1hbmQtcHJvZHVjdHMtcGFyYWxsYXgtbGF5ZXJcIj5cbiAgICAgICAgICAgICAgICAgICAgPFRleHRCbG9ja1xuICAgICAgICAgICAgICAgICAgICAgICAgbmFtZT1cInRleHQtd3JhcHBlclwiXG4gICAgICAgICAgICAgICAgICAgICAgICBoZWFkaW5nPXtoZWFkaW5nfVxuICAgICAgICAgICAgICAgICAgICAgICAgc3ViaGVhZGluZz17c3ViaGVhZGluZ31cbiAgICAgICAgICAgICAgICAgICAgICAgIGRlc2NyaXB0aW9uPXtkZXNjcmlwdGlvbn1cbiAgICAgICAgICAgICAgICAgICAgLz5cbiAgICAgICAgICAgICAgICAgICAgPFByb2RMaXN0IHJlZj17cGFnZX0gbmFtZT1cInByb2R1Y3RzLWdyaWRcIj5cbiAgICAgICAgICAgICAgICAgICAgICAgIHtwcm9kdWN0cy5tYXAoKHsgdGl0bGUsIGltYWdlIH0pID0+IChcbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8UHJvZHVjdCBrZT17dGl0bGV9IHJldmVhbD17cmV2ZWFsfSBuYW1lPXt0aXRsZX0+XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIDxQcm9kSW1hZ2UgaW1hZ2VJbmZvPXtpbWFnZX0gLz5cbiAgICAgICAgICAgICAgICAgICAgICAgICAgICA8L1Byb2R1Y3Q+XG4gICAgICAgICAgICAgICAgICAgICAgICApKX1cbiAgICAgICAgICAgICAgICAgICAgPC9Qcm9kTGlzdD5cbiAgICAgICAgICAgICAgICA8L1Byb2R1Y3RzTGF5ZXI+XG4gICAgICAgICAgICAgICAgPEhlcm9CYWNrZ3JvdW5kTGF5ZXIgbmFtZT1cInByb2R1Y3RzLWhlcm8tYmFja2dyb3VuZFwiIHZhcmlhbnQ9XCJiYWNrXCI+XG4gICAgICAgICAgICAgICAgICAgIDxPdmVybGF5U2hhZGUgLz5cbiAgICAgICAgICAgICAgICAgICAgPEJhY2tncm91bmRJbWFnZSBpbWFnZUluZm89e2JhY2tncm91bmRQcm9kdWN0c30gLz5cbiAgICAgICAgICAgICAgICA8L0hlcm9CYWNrZ3JvdW5kTGF5ZXI+XG4gICAgICAgICAgICA8L01haW5QYXJhbGxheEdyb3VwPlxuICAgICAgICA8L1RoZW1lUHJvdmlkZXI+XG4gICAgKTtcbn07XG5cbmNvbnN0IE1haW5QYXJhbGxheEdyb3VwID0gc3R5bGVkKFBhcmFsbGF4R3JvdXApYFxuICAgIGhlaWdodDogMjAwdmg7XG4gICAgbWluLWhlaWdodDogMjAwMHB4O1xuICAgIEBtZWRpYSAoJHsoeyB0aGVtZSB9KSA9PiB0aGVtZS5tZWRpYVF1ZXJpZXMuc30pIHtcbiAgICAgICAgbWluLWhlaWdodDogMTcwMHB4O1xuICAgIH1cbmA7XG5cbmNvbnN0IFByb2R1Y3RzTGF5ZXIgPSBzdHlsZWQoUGFyYWxsYXhMYXllcilgXG4gICAgaGVpZ2h0OiBtYXgtY29udGVudDtcbiAgICBtaW4taGVpZ2h0OiAxNjAwcHg7XG4gICAgY29sb3I6IGJsYWNrO1xuICAgIHBhZGRpbmctYm90dG9tOiAxMHJlbTtcbiAgICBiYWNrZ3JvdW5kOiB3aGl0ZTtcbiAgICBkaXNwbGF5OiBmbGV4O1xuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XG4gICAgQG1lZGlhICgkeyh7IHRoZW1lIH0pID0+IHRoZW1lLm1lZGlhUXVlcmllcy5sfSkge1xuICAgICAgICBkaXNwbGF5OiBibG9jaztcbiAgICAgICAgcGFkZGluZy1ib3R0b206IDNyZW07XG4gICAgICAgIG1pbi1oZWlnaHQ6IDQ0MHB4O1xuICAgIH1cbmA7XG5cbmNvbnN0IEhlcm9CYWNrZ3JvdW5kTGF5ZXIgPSBzdHlsZWQoUGFyYWxsYXhMYXllcilgXG4gICAgdG9wOiA1MCU7XG5gO1xuXG5jb25zdCBCYWNrZ3JvdW5kSW1hZ2UgPSBzdHlsZWQoUHJldmlld0NvbXBhdGlibGVCYWNrZ3JvdW5kSW1hZ2UpYFxuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXI7XG4gICAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcbiAgICBiYWNrZ3JvdW5kLXNpemU6IGNvdmVyO1xuYDtcblxuY29uc3QgT3ZlcmxheVNoYWRlID0gc3R5bGVkLmRpdmBcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XG4gICAgdG9wOiAwO1xuICAgIGxlZnQ6IDA7XG4gICAgZGlzcGxheTogYmxvY2s7XG4gICAgd2lkdGg6IDEwMCU7XG4gICAgaGVpZ2h0OiAxMDAlO1xuICAgIHotaW5kZXg6IDEwO1xuICAgIGJhY2tncm91bmQ6IHJnYmEoMjAsIDI1LCAzMCwgMC4zKTtcbmA7XG5cbmNvbnN0IFByb2RMaXN0ID0gc3R5bGVkLnVsYFxuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogZml0LWNvbnRlbnQ7XG4gICAgbWF4LXdpZHRoOiAxNDUwcHg7XG4gICAgbWFyZ2luOiAxMDBweCA1MHB4IDEwMHB4IDA7XG4gICAgcGFkZGluZzogMjBweCAyJSA1NXB4IDIlO1xuICAgIG92ZXJmbG93OiBoaWRkZW47XG4gICAgYmFja2dyb3VuZDogd2hpdGU7XG4gICAgZmxleDogMSAwIDYwJTtcbiAgICBAbWVkaWEgKCR7KHsgdGhlbWUgfSkgPT4gdGhlbWUubWVkaWFRdWVyaWVzLmx9KSB7XG4gICAgICAgIHdpZHRoOiA5MCU7XG4gICAgICAgIG1hcmdpbjogMCBhdXRvO1xuICAgIH1cbmA7XG5cbmNvbnN0IFByb2R1Y3QgPSBzdHlsZWQoSGV4YWdvbilgXG4gICAgYm94LXNoYWRvdzogMHB4IDlweCAxMXB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjIpLCAwcHggMThweCAyOHB4IDJweCByZ2JhKDAsIDAsIDAsIDAuMTQpLFxuICAgICAgICAwcHggN3B4IDM0cHggNnB4IHJnYmEoMCwgMCwgMCwgMC4xMik7XG5gO1xuXG5jb25zdCBQcm9kSW1hZ2UgPSBzdHlsZWQoUHJldmlld0NvbXBhdGlibGVCYWNrZ3JvdW5kSW1hZ2UpYFxuICAgIHdpZHRoOiAxMDAlO1xuICAgIGhlaWdodDogMTAwJTtcbiAgICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiA1MCUgNjAlO1xuICAgIGJhY2tncm91bmQtcmVwZWF0OiBuby1yZXBlYXQ7XG4gICAgYmFja2dyb3VuZC1zaXplOiBjb3ZlcjtcbiAgICBwYWRkaW5nOiA1cHg7XG5gO1xuXG5jb25zdCBQcm9kdWN0c1BhZ2UgPSAoeyBkYXRhIH0pID0+IHtcbiAgICBjb25zdCB7IGZyb250bWF0dGVyIH0gPSBkYXRhLm1hcmtkb3duUmVtYXJrO1xuICAgIHJldHVybiA8UHJvZHVjdHNQYWdlVGVtcGxhdGUgey4uLmZyb250bWF0dGVyfSAvPjtcbn07XG5cbmV4cG9ydCBjb25zdCBwcm9kdWN0c1BhZ2VRdWVyeSA9IGdyYXBocWxgXG4gICAgcXVlcnkgUHJvZHVjdHNQYWdlKCRpZDogU3RyaW5nISkge1xuICAgICAgICBtYXJrZG93blJlbWFyayhpZDogeyBlcTogJGlkIH0pIHtcbiAgICAgICAgICAgIGZyb250bWF0dGVyIHtcbiAgICAgICAgICAgICAgICBwYWdlTmFtZVxuICAgICAgICAgICAgICAgIGhlYWRpbmdcbiAgICAgICAgICAgICAgICBzdWJoZWFkaW5nXG4gICAgICAgICAgICAgICAgZGVzY3JpcHRpb25cbiAgICAgICAgICAgICAgICBiYWNrZ3JvdW5kUHJvZHVjdHMge1xuICAgICAgICAgICAgICAgICAgICBjaGlsZEltYWdlU2hhcnAge1xuICAgICAgICAgICAgICAgICAgICAgICAgZmx1aWQobWF4V2lkdGg6IDIwMDAsIHF1YWxpdHk6IDUwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgLi4uR2F0c2J5SW1hZ2VTaGFycEZsdWlkXG4gICAgICAgICAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICB9XG4gICAgICAgICAgICAgICAgcHJvZHVjdHMge1xuICAgICAgICAgICAgICAgICAgICB0aXRsZVxuICAgICAgICAgICAgICAgICAgICBpbWFnZSB7XG4gICAgICAgICAgICAgICAgICAgICAgICBjaGlsZEltYWdlU2hhcnAge1xuICAgICAgICAgICAgICAgICAgICAgICAgICAgIGZsdWlkKG1heFdpZHRoOiA1MDAsIHF1YWxpdHk6IDMwKSB7XG4gICAgICAgICAgICAgICAgICAgICAgICAgICAgICAgIC4uLkdhdHNieUltYWdlU2hhcnBGbHVpZFxuICAgICAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgICAgICAgICAgfVxuICAgICAgICAgICAgICAgIH1cbiAgICAgICAgICAgIH1cbiAgICAgICAgfVxuICAgIH1cbmA7XG5cblByb2R1Y3RzUGFnZS5wcm9wVHlwZXMgPSB7XG4gICAgZGF0YTogUHJvcFR5cGVzLnNoYXBlKHtcbiAgICAgICAgbWFya2Rvd25SZW1hcms6IFByb3BUeXBlcy5zaGFwZSh7XG4gICAgICAgICAgICBmcm9udG1hdHRlcjogUHJvcFR5cGVzLm9iamVjdCxcbiAgICAgICAgfSksXG4gICAgfSksXG59O1xuXG5Qcm9kdWN0c1BhZ2VUZW1wbGF0ZS5wcm9wVHlwZXMgPSB7XG4gICAgcGFnZU5hbWU6IFByb3BUeXBlcy5zdHJpbmcsXG4gICAgaGVhZGluZzogUHJvcFR5cGVzLnN0cmluZyxcbiAgICBzdWJoZWFkaW5nOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIGRlc2NyaXB0aW9uOiBQcm9wVHlwZXMuc3RyaW5nLFxuICAgIHByb2R1Y3RzOiBQcm9wVHlwZXMuYXJyYXksXG4gICAgYmFja2dyb3VuZFByb2R1Y3RzOiBQcm9wVHlwZXMub25lT2ZUeXBlKFtQcm9wVHlwZXMub2JqZWN0LCBQcm9wVHlwZXMuc3RyaW5nXSksXG59O1xuXG5leHBvcnQgZGVmYXVsdCBQcm9kdWN0c1BhZ2U7XG4iXX0= */",
  toString: _EMOTION_STRINGIFIED_CSS_ERROR__
});

var ProductsPage = function ProductsPage(_ref6) {
  var data = _ref6.data;
  var frontmatter = data.markdownRemark.frontmatter;
  return Object(_emotion_core__WEBPACK_IMPORTED_MODULE_11__["jsx"])(ProductsPageTemplate, Object(_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__["default"])({}, frontmatter, {
    __self: _this,
    __source: {
      fileName: _jsxFileName,
      lineNumber: 144,
      columnNumber: 12
    }
  }));
};

var productsPageQuery = "155567950";
ProductsPage.propTypes = {
  data: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.shape({
    markdownRemark: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.shape({
      frontmatter: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.object
    })
  })
};
ProductsPageTemplate.propTypes = {
  pageName: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.string,
  heading: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.string,
  subheading: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.string,
  description: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.string,
  products: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.array,
  backgroundProducts: prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.oneOfType([prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.object, prop_types__WEBPACK_IMPORTED_MODULE_3___default.a.string])
};
var _default = ProductsPage;
/* harmony default export */ __webpack_exports__["default"] = (_default);
;

(function () {
  var reactHotLoader = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.default : undefined;

  if (!reactHotLoader) {
    return;
  }

  reactHotLoader.register(ProductsPageTemplate, "ProductsPageTemplate", "/Users/specificityy/Projects/kaizen-farms/src/templates/products-page.js");
  reactHotLoader.register(MainParallaxGroup, "MainParallaxGroup", "/Users/specificityy/Projects/kaizen-farms/src/templates/products-page.js");
  reactHotLoader.register(ProductsLayer, "ProductsLayer", "/Users/specificityy/Projects/kaizen-farms/src/templates/products-page.js");
  reactHotLoader.register(HeroBackgroundLayer, "HeroBackgroundLayer", "/Users/specificityy/Projects/kaizen-farms/src/templates/products-page.js");
  reactHotLoader.register(BackgroundImage, "BackgroundImage", "/Users/specificityy/Projects/kaizen-farms/src/templates/products-page.js");
  reactHotLoader.register(OverlayShade, "OverlayShade", "/Users/specificityy/Projects/kaizen-farms/src/templates/products-page.js");
  reactHotLoader.register(ProdList, "ProdList", "/Users/specificityy/Projects/kaizen-farms/src/templates/products-page.js");
  reactHotLoader.register(Product, "Product", "/Users/specificityy/Projects/kaizen-farms/src/templates/products-page.js");
  reactHotLoader.register(ProdImage, "ProdImage", "/Users/specificityy/Projects/kaizen-farms/src/templates/products-page.js");
  reactHotLoader.register(ProductsPage, "ProductsPage", "/Users/specificityy/Projects/kaizen-farms/src/templates/products-page.js");
  reactHotLoader.register(productsPageQuery, "productsPageQuery", "/Users/specificityy/Projects/kaizen-farms/src/templates/products-page.js");
  reactHotLoader.register(_default, "default", "/Users/specificityy/Projects/kaizen-farms/src/templates/products-page.js");
})();

;

(function () {
  var leaveModule = typeof reactHotLoaderGlobal !== 'undefined' ? reactHotLoaderGlobal.leaveModule : undefined;
  leaveModule && leaveModule(module);
})();
/* WEBPACK VAR INJECTION */}.call(this, __webpack_require__(/*! ./../../node_modules/webpack/buildin/harmony-module.js */ "./node_modules/webpack/buildin/harmony-module.js")(module)))

/***/ })

})
//# sourceMappingURL=cms.40abebe487b83ea94dc3.hot-update.js.map